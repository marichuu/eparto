<?php

namespace DoctrineProxies\__CG__\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Entity\\User' . "\0" . 'id', '' . "\0" . 'Entity\\User' . "\0" . 'email', '' . "\0" . 'Entity\\User' . "\0" . 'password', '' . "\0" . 'Entity\\User' . "\0" . 'valid', '' . "\0" . 'Entity\\User' . "\0" . 'recovery_key', '' . "\0" . 'Entity\\User' . "\0" . 'recovery_key_date', '' . "\0" . 'Entity\\User' . "\0" . 'banir', '' . "\0" . 'Entity\\User' . "\0" . 'firstconnexion', '' . "\0" . 'Entity\\User' . "\0" . 'is_superadmin', '' . "\0" . 'Entity\\User' . "\0" . 'firstName', '' . "\0" . 'Entity\\User' . "\0" . 'lastName', '' . "\0" . 'Entity\\User' . "\0" . 'phone', '' . "\0" . 'Entity\\User' . "\0" . 'attemptNumber', '' . "\0" . 'Entity\\User' . "\0" . 'lastLogin', '' . "\0" . 'Entity\\User' . "\0" . 'structure', '' . "\0" . 'Entity\\User' . "\0" . 'status');
        }

        return array('__isInitialized__', '' . "\0" . 'Entity\\User' . "\0" . 'id', '' . "\0" . 'Entity\\User' . "\0" . 'email', '' . "\0" . 'Entity\\User' . "\0" . 'password', '' . "\0" . 'Entity\\User' . "\0" . 'valid', '' . "\0" . 'Entity\\User' . "\0" . 'recovery_key', '' . "\0" . 'Entity\\User' . "\0" . 'recovery_key_date', '' . "\0" . 'Entity\\User' . "\0" . 'banir', '' . "\0" . 'Entity\\User' . "\0" . 'firstconnexion', '' . "\0" . 'Entity\\User' . "\0" . 'is_superadmin', '' . "\0" . 'Entity\\User' . "\0" . 'firstName', '' . "\0" . 'Entity\\User' . "\0" . 'lastName', '' . "\0" . 'Entity\\User' . "\0" . 'phone', '' . "\0" . 'Entity\\User' . "\0" . 'attemptNumber', '' . "\0" . 'Entity\\User' . "\0" . 'lastLogin', '' . "\0" . 'Entity\\User' . "\0" . 'structure', '' . "\0" . 'Entity\\User' . "\0" . 'status');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setValid($valid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValid', array($valid));

        return parent::setValid($valid);
    }

    /**
     * {@inheritDoc}
     */
    public function getValid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValid', array());

        return parent::getValid();
    }

    /**
     * {@inheritDoc}
     */
    public function setRecoveryKey($recoveryKey)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRecoveryKey', array($recoveryKey));

        return parent::setRecoveryKey($recoveryKey);
    }

    /**
     * {@inheritDoc}
     */
    public function getRecoveryKey()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRecoveryKey', array());

        return parent::getRecoveryKey();
    }

    /**
     * {@inheritDoc}
     */
    public function setRecoveryKeyDate($recoveryKeyDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRecoveryKeyDate', array($recoveryKeyDate));

        return parent::setRecoveryKeyDate($recoveryKeyDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getRecoveryKeyDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRecoveryKeyDate', array());

        return parent::getRecoveryKeyDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setBanir($banir)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBanir', array($banir));

        return parent::setBanir($banir);
    }

    /**
     * {@inheritDoc}
     */
    public function getBanir()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBanir', array());

        return parent::getBanir();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstconnexion($firstconnexion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstconnexion', array($firstconnexion));

        return parent::setFirstconnexion($firstconnexion);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstconnexion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstconnexion', array());

        return parent::getFirstconnexion();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsSuperadmin($isSuperadmin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsSuperadmin', array($isSuperadmin));

        return parent::setIsSuperadmin($isSuperadmin);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsSuperadmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsSuperadmin', array());

        return parent::getIsSuperadmin();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($firstName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', array($firstName));

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', array());

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName($lastName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', array($lastName));

        return parent::setLastName($lastName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', array());

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone($phone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone', array($phone));

        return parent::setPhone($phone);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone', array());

        return parent::getPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastLogin($lastLogin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastLogin', array($lastLogin));

        return parent::setLastLogin($lastLogin);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastLogin', array());

        return parent::getLastLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttemptNumber($attemptNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttemptNumber', array($attemptNumber));

        return parent::setAttemptNumber($attemptNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttemptNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttemptNumber', array());

        return parent::getAttemptNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStructure(\Entity\Structure $structure)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStructure', array($structure));

        return parent::setStructure($structure);
    }

    /**
     * {@inheritDoc}
     */
    public function getStructure()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStructure', array());

        return parent::getStructure();
    }

}
